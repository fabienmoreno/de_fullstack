version: '3.8'

services:
  # NPM App
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: always
    ports:
      - "80:80"      # HTTP
      - "443:443"    # HTTPS
      - "81:81"      # Admin interface
    networks:
      - app-network
    environment:
      DB_MYSQL_HOST: npm-db
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: npm
      DB_MYSQL_PASSWORD: ${NPM_DB_MYSQL_PASSWORD}
      DB_MYSQL_NAME: npm
    depends_on:
      - npm-db
    volumes:
      - npm-data:/data
      - npm-letsencrypt:/etc/letsencrypt

  # NPM DB
  npm-db:
    image: mariadb:10.5
    container_name: npm-db
    restart: always
    networks:
      - app-network
    environment:
      MYSQL_ROOT_PASSWORD: ${NPM_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: npm
      MYSQL_USER: npm
      MYSQL_PASSWORD: ${NPM_DB_MYSQL_PASSWORD}
    volumes:
      - npm-db-data:/var/lib/mysql

  # Main postgres DB for app
  postgres:
    image: postgres:15
    container_name: app_postgres
    restart: always
    
    # Use environment variables that you'll set in Portainer
    environment:
      POSTGRES_USER: "${APP_POSTGRES_USER}"
      POSTGRES_PASSWORD: "${APP_POSTGRES_PASSWORD}"
      POSTGRES_DB: "${APP_POSTGRES_DB}"
    
    # Command line flags to enable logical replication
    command: >
      postgres
        -c wal_level=logical
        -c max_wal_senders=1
        -c max_replication_slots=1
    
    # Publish the DB port externally so Airbyte Cloud can connect
    ports:
      - '5432:5432'
    
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
    networks:
      - app-network
  
  # Metabase DB
  metabase-db:
    image: postgres:15
    container_name: metabase-db
    restart: always
    networks:
      - app-network
    environment:
      POSTGRES_DB: ${MB_POSTGRES_DB}
      POSTGRES_USER: ${MB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MB_POSTGRES_PASSWORD}
    volumes:
      - metabase-db-data:/var/lib/postgresql/data

  # Metabase app
  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    restart: always
    networks:
      - app-network
    depends_on:
      - metabase-db
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${MB_POSTGRES_DB}
      MB_DB_HOST: metabase-db
      MB_DB_PORT: 5432
      MB_DB_USER: ${MB_POSTGRES_USER}
      MB_DB_PASS: ${MB_POSTGRES_PASSWORD}
    ports:
      - "3000:3000"

  # PG Admin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    # Environment variables set in Portainer
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    depends_on:
      - postgres
      - metabase-db
    ports:
      - 5050:80
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  npm-data:
  npm-letsencrypt:
  npm-db-data:
  postgres_data:
  metabase-db-data:



# Metabase postgres instance
## With Database mb_app created


# PG Admin
# Metabase app
# Flask App

# Volumes 

# Network